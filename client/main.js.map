{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/index.ts","webpack:///./src/app/components/message-form/message-form.component.html","webpack:///./src/app/components/message-form/message-form.component.scss","webpack:///./src/app/components/message-form/message-form.component.ts","webpack:///./src/app/components/message-item/message-item.component.html","webpack:///./src/app/components/message-item/message-item.component.scss","webpack:///./src/app/components/message-item/message-item.component.ts","webpack:///./src/app/components/message-list/message-list.component.html","webpack:///./src/app/components/message-list/message-list.component.scss","webpack:///./src/app/components/message-list/message-list.component.ts","webpack:///./src/app/models/message.ts","webpack:///./src/app/services/dialogflow.service.ts","webpack:///./src/app/services/index.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div  class=\\\"chatform\\\">\\n  <app-message-list [messages]=\\\"messages\\\"></app-message-list>\\n  <app-message-form [message]=\\\"message\\\" [messages]=\\\"messages\\\"></app-message-form>\\n</div>\\n\"","module.exports = \".chatform {\\n  width: 600px;\\n  margin: 0 auto;\\n  margin-top: 50px; }\\n\"","import { Component } from '@angular/core';\nimport { Message } from './models/message';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  public message : Message;\n  public messages : Message[];\n\n\n  constructor(){\n    this.message = new Message('', 'assets/images/user.png');\n    this.messages = [\n      new Message('Welcome to BCIS Paper Helper', 'assets/images/bot.png', new Date())\n    ];\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\nimport { AppComponent } from './app.component';\nimport { DialogflowService } from '../app/services/dialogflow.service';\nimport { MessageListComponent, MessageFormComponent, MessageItemComponent } from './components';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MessageListComponent,\n    MessageFormComponent,\n    MessageItemComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpModule\n  ],\n  providers: [\n    DialogflowService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export * from './message-form/message-form.component';\nexport * from './message-list/message-list.component';\nexport * from './message-item/message-item.component';\n","module.exports = \"<div class=\\\"chatcontrol\\\">\\n  <input type=\\\"text\\\" class=\\\"form-control chatinput\\\" [(ngModel)]=\\\"message.content\\\"/>\\n  <button class=\\\"btn btn-success sendbtn\\\" (click)=\\\"sendMessage()\\\">Send</button>\\n</div>\\n\"","module.exports = \".chatcontrol {\\n  float: left;\\n  width: 100%; }\\n  .chatcontrol .chatinput {\\n    width: 80%;\\n    float: left;\\n    border-radius: 0; }\\n  .chatcontrol .sendbtn {\\n    width: 20%;\\n    float: left;\\n    border-radius: 0;\\n    text-transform: uppercase; }\\n\"","import { Component, OnInit, Input } from '@angular/core';\nimport { Message } from '../../models/message';\nimport { DialogflowService } from '../../services';\n\n@Component({\n  selector: 'app-message-form',\n  templateUrl: './message-form.component.html',\n  styleUrls: ['./message-form.component.scss']\n})\nexport class MessageFormComponent implements OnInit {\n\n  @Input('message')\n  private message : Message;\n\n  @Input('messages')\n  private messages : Message[];\n\n  constructor(private dialogFlowService: DialogflowService) { }\n\n  ngOnInit() {\n  }\n\n  public sendMessage(): void {\n    this.message.timestamp = new Date();\n    this.messages.push(this.message);\n\n    this.dialogFlowService.getResponse(this.message.content).subscribe(res => {\n      this.messages.push(\n        new Message(res.result.fulfillment.speech, 'assets/images/bot.png', res.timestamp)\n      );\n    });\n\n    this.message = new Message('', 'assets/images/user.png');\n  }\n\n}\n","module.exports = \"<li class=\\\"list-group-item\\\">\\n  <img [src]=\\\"message.avatar\\\" class=\\\"avatar\\\"/>\\n  <div class=\\\"message\\\">\\n    {{message.content}}\\n  </div>\\n  <div class=\\\"timeform\\\">\\n    <i class=\\\"fa fa-clock-o\\\" aria-hidden=\\\"true\\\"></i> <span class=\\\"timestamp\\\">at {{message.timestamp | date : 'h:mm' }}</span>\\n  </div>\\n</li>\\n\"","module.exports = \".message {\\n  font-size: 1em;\\n  font-style: italic;\\n  font-weight: 400; }\\n\\n.timeform {\\n  float: left;\\n  width: 100%; }\\n\\n.timeform i {\\n    margin-left: 20px; }\\n\\n.timeform .timestamp {\\n    font-size: 0.6em; }\\n\\n.avatar {\\n  width: 50px;\\n  margin-right: 20px; }\\n\"","import { Component, OnInit, Input } from '@angular/core';\nimport { Message } from '../../models/message';\n\n@Component({\n  selector: 'app-message-item',\n  templateUrl: './message-item.component.html',\n  styleUrls: ['./message-item.component.scss']\n})\nexport class MessageItemComponent implements OnInit {\n\n  @Input('message')\n  private message: Message;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div class=\\\"chatlist\\\" #chatlist>\\n  <ul class=\\\"list-group\\\">\\n    <app-message-item *ngFor=\\\"let msg of messages\\\" [message]=\\\"msg\\\"></app-message-item>\\n  </ul>\\n</div>\\n\"","module.exports = \".chatlist {\\n  height: 600px;\\n  overflow-y: scroll; }\\n\"","import { Component, OnInit, Input, AfterViewInit, ViewChild, ViewChildren, QueryList, ElementRef } from '@angular/core';\nimport { Message } from '../../models/message';\nimport { MessageItemComponent } from '../message-item/message-item.component';\n\n@Component({\n  selector: 'app-message-list',\n  templateUrl: './message-list.component.html',\n  styleUrls: ['./message-list.component.scss']\n})\nexport class MessageListComponent implements OnInit, AfterViewInit {\n\n  @Input('messages')\n  private messages: Message[];\n\n  @ViewChild('chatlist', { read: ElementRef }) chatList: ElementRef;\n  @ViewChildren(MessageItemComponent, { read: ElementRef }) chatItems: QueryList<MessageItemComponent>;\n\n  constructor() { }\n\n  ngAfterViewInit() {\n    this.chatItems.changes.subscribe(elements => {\n      // console.log('messsage list changed: ' + this.messages.length);\n      this.scrollToBottom();\n    });\n  }\n\n  private scrollToBottom(): void {\n    try {\n      this.chatList.nativeElement.scrollTop = this.chatList.nativeElement.scrollHeight;\n    }\n    catch (err) {\n      console.log('Could not find the \"chatList\" element.');\n    }\n  }\n\n  ngOnInit() {\n  }\n\n}\n","export class Message {\n  content: string;\n  timestamp: Date;\n  avatar: string;\n\n  constructor(content: string, avatar: string, timestamp?: Date){\n    this.content = content;\n    this.timestamp = timestamp;\n    this.avatar = avatar;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Http, Headers } from '@angular/http';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { environment } from '../../environments/environment';\n\n@Injectable()\nexport class DialogflowService {\n\n  private baseURL: string = 'https://api.dialogflow.com/v1/query?v=20150910';\n  private token: string = environment.token;\n\n  constructor(private http: Http){}\n\n  public getResponse(query: string){\n    let data = {\n      query : query,\n      lang: 'en',\n      sessionId: '12345'\n    }\n    return this.http\n      .post(`${this.baseURL}`, data, {headers: this.getHeaders()}).pipe(\n      map(res => {\n        return res.json()\n      })\n    )\n  }\n\n  public getHeaders(){\n    let headers = new Headers();\n    headers.append('Authorization', `Bearer ${this.token}`);\n    return headers;\n  }\n}\n","export * from './dialogflow.service';\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  token: '454fa83e408c4d6aa5f77e984764b7d3'\n};\n\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}